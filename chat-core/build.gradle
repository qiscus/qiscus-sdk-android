/**
 * Copyright (c) 2016 Qiscus.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.library'
//apply plugin: 'com.github.dcendents.android-maven'
apply from: '../dependencies.gradle'
apply from: 'lib-version.gradle'
apply from: rootProject.file('gradle/quality.gradle')
apply from: 'publish.gradle'
apply plugin: "com.jfrog.artifactory"
//apply plugin: 'org.sonarqube'

apply from: '../jacoco.gradle'
apply from: '../sonarqube.gradle'


android {
    compileSdkVersion compileSDKVersion
    defaultConfig {
        minSdkVersion minSDKVersion
        targetSdkVersion targetSDKVersion
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            testCoverageEnabled true
        }

        buildTypes.each {
            it.buildConfigField("String", "BASE_URL_SERVER", BASE_URL_SERVER)
            it.buildConfigField("String", "BASE_URL_MQTT_BROKER", BASE_URL_MQTT_BROKER)
            it.buildConfigField("String", "BASE_URL_MQTT_LB", BASE_URL_MQTT_LB)
            it.buildConfigField("Integer", "CHAT_CORE_VERSION_MAJOR", chatCoreVersionMajor)
            it.buildConfigField("Integer", "CHAT_CORE_VERSION_MINOR", chatCoreVersionMinor)
            it.buildConfigField("Integer", "CHAT_CORE_VERSION_PATCH", chatCoreVersionPatch)
            it.buildConfigField("Integer", "CHAT_BUILT_IN_VERSION_MAJOR", chatVersionMajor)
            it.buildConfigField("Integer", "CHAT_BUILT_IN_VERSION_MINOR", chatVersionMinor)
            it.buildConfigField("Integer", "CHAT_BUILT_IN_VERSION_PATCH", chatVersionPatch)
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        abortOnError false
        textReport true
    }
    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    useLibrary 'org.apache.http.legacy'
    useLibrary 'android.test.runner'

    testOptions {
        //execution 'ANDROID_TEST_ORCHESTRATOR'
        animationsDisabled true
        unitTests {
            includeAndroidResources = true

        }
    }

    defaultConfig {
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }
}

buildscript {
    repositories {
        google()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'me.tatarka:gradle-retrolambda:3.7.0'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0'
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.21.0"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.4.0.2513"
    }
}

/*apply from: '../buildsystem/bintrayv1.gradle'
apply from: '../buildsystem/installv1.gradle'*/

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    api firebaseLibs
    api qiscusMqttLibs
    api qiscusManggil
    api networkLibs
    api rxLibs
    api eventBusLib
    api rxUrlExtractorLib
    api securityDeps

    //testImplementation 'junit:junit:4.12'
    //androidTestImplementation 'androidx.test:runner:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    //androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'

    // test
    testImplementation 'org.json:json:20180813'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:3.7.7'

    androidTestImplementation 'androidx.test:core:1.4.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    testImplementation 'androidx.test:core:1.4.0'
    testImplementation 'androidx.test.ext:junit:1.1.3'
    testImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    testImplementation 'androidx.test:runner:1.4.0'
    androidTestUtil 'androidx.test:orchestrator:1.4.1'

}