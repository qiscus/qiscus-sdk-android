/**
 * Copyright (c) 2016 Qiscus.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.library'
//apply plugin: 'com.github.dcendents.android-maven'
apply from: '../dependencies.gradle'
apply from: 'lib-version.gradle'
//apply from: rootProject.file('gradle/quality.gradle')
//apply plugin: 'jacoco'
apply from: 'publish.gradle'
apply plugin: "com.jfrog.artifactory"
apply plugin: "org.sonarqube"


android {
    compileSdkVersion compileSDKVersion
    defaultConfig {
        minSdkVersion minSDKVersion
        targetSdkVersion targetSDKVersion
        versionCode 1
        versionName "${chatCoreVersionMajor}.${chatCoreVersionMinor}.${chatCoreVersionPatch}"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            testCoverageEnabled true
        }

        buildTypes.each {
            it.buildConfigField("String", "BASE_URL_SERVER", BASE_URL_SERVER)
            it.buildConfigField("String", "BASE_URL_MQTT_BROKER", BASE_URL_MQTT_BROKER)
            it.buildConfigField("String", "BASE_URL_MQTT_LB", BASE_URL_MQTT_LB)
            it.buildConfigField("String", "CHAT_CORE_VERSION_STRING", chatCoreVersionString)
        }
    }

    buildFeatures {
        buildConfig = true
    }


//    android {
//        jacoco {
//            version = '0.7.9'
//        }
//    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    lintOptions {
        abortOnError false
        textReport true
    }
    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }
    namespace 'com.qiscus.sdk.chat.core'
    useLibrary 'org.apache.http.legacy'
}

buildscript {
    repositories {
        google()
        gradlePluginPortal()
        jcenter()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'me.tatarka:gradle-retrolambda:3.7.0'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
       // classpath 'com.jfrog..gradle:gradle-bintray-plugin:1.8.0'
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.24.18"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.4.0.2513"

    }
}

//apply from: '../buildsystem/bintrayv1.gradle'
//apply from: '../buildsystem/installv1.gradle'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    api firebaseLibs
    api qiscusMqttLibs
    api qiscusManggilWithoutEmoji
    api networkLibs
    api rxDebs
    api eventBusLib
    api rxUrlExtractorLib
    api securityDeps
    api lifeCircleDeb

    implementation 'com.google.code.gson:gson:2.10.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
}
